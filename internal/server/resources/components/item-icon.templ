package components

import (
	"fmt"
	"github.com/asek-ll/aecc-server/internal/dao"
)

func ItemIconByUID(itemUid string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		item := getItem(ctx, itemUid)
		return ItemIcon(item).Render(ctx, w)
	})
}

templ ItemIcon(item *dao.Item) {
	<div data-tooltip={ fmt.Sprintf("%s - %s", item.UID, item.DisplayName) } class="item-stack">
		<a href={ templ.URL(fmt.Sprintf("/items/%s", item.UID)) }>
			<img src={ "data:image/png;base64, " + item.Base64Icon() } style="width: 48px; height: 48px;"/>
		</a>
	</div>
}

templ ItemWithAmount(item *dao.Item, amount int) {
	<div data-tooltip={ fmt.Sprintf("%s - %s", item.UID, item.DisplayName) } class="item-stack">
		<a href={ templ.URL(fmt.Sprintf("/items/%s", item.UID)) }>
			<img src={ "data:image/png;base64, " + item.Base64Icon() } style="width: 48px; height: 48px;"/>
            if amount > 1 {
                <span class="stack-count">{ fmt.Sprintf("%d", amount) }</span>
            }
		</a>
	</div>
}

func ItemStack(itemUid string, amount int) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		item := getItem(ctx, itemUid)
		return ItemWithAmount(item, amount).Render(ctx, w)
	})
}
