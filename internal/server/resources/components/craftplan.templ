package components

import (
	"fmt"
	"strconv"

	"github.com/asek-ll/aecc-server/internal/services/crafter"
)

templ CraftingPlanPage(plan *crafter.Plan, createUrl string) {
	@Page("Craft Plan For") {
		<button hx-post={ createUrl }>Process!</button>
		<section>
			<form>
				<div>
					for i, recipeItem := range plan.Goals {
						@ItemInputs(fmt.Sprintf("r%d", i), recipeItem)
					}
					<button type="button" hx-get="/item-popup?role=goal&mode=recipe-item" hx-target="this" hx-swap="beforebegin">Add</button>
				</div>
				<input type="submit" value="Apply"/>
			</form>
		</section>
		@CraftingPlan(plan)
	}
}

templ CraftingPlan(plan *crafter.Plan) {
	<table>
		for _, step := range plan.Steps {
			<tr>
				<td>
					{ strconv.Itoa(step.Repeats) } X 
					for _, result := range step.Recipe.Results {
						@ItemStack(result.ItemUID, result.Amount)
					}
				</td>
				<td>
					<a href={ templ.URL(fmt.Sprintf("/recipes/%d", step.Recipe.ID)) }>({ step.Recipe.Name })</a>
				</td>
				<td>
					{ step.Recipe.Type }
				</td>
				<td>
					@RecipesGrid(step.Recipe)
				</td>
			</tr>
		}
	</table>
	<table>
		for _, related := range plan.Related {
			<tr>
				<td>
					@ItemIconByUID(related.UID)
				</td>
				<td>
					{ strconv.Itoa(related.Consumed) }
				</td>
				<td>
					{ strconv.Itoa(related.Produced) }
				</td>
				<td>
					{ strconv.Itoa(related.StorageAmount - related.Consumed + related.Produced) }
				</td>
			</tr>
		}
	</table>
}
